####################################################################################################
#### author: SlickStack ############################################################################
#### link: https://slickstack.io ###################################################################
#### mirror: https://mirrors.slickstack.io/modules/nginx/sites/production.txt ######################
#### path: n/a (boilerplate) #######################################################################
#### destination: /var/www/sites/production (after install) ########################################
#### purpose: Nginx server block boilerplate optimized for SlickStack production sites #############
#### module version: Nginx 1.18.x ##################################################################
#### sourced by: nginx.conf ########################################################################
#### bash aliases: n/a (ss-install-nginx-config) ###################################################
####################################################################################################

## SLICKSTACK SUPPORTS HTTPS-ONLY NGINX SERVER BLOCKS WITH HSTS ENABLED BY DEFAULT ##

####################################################################################################
#### Server Block (Production): Catch-All Redirect To Canonical Domain #############################
####################################################################################################

## here we force redirect any non-canonical requests to the canonical server block below ##
## this vastly improves security, prevents IP snooping, SEO problems, and beyond ##

server {
        listen          80 default_server;
        listen          443 ssl default_server;
        listen          [::]:80;
        listen          [::]:443 ssl;
        server_name     _;
        return 301      https://server.pbarecap.ph$request_uri;
}

####################################################################################################
#### Server Block (Production): Canonical Domain (Single Website Only) #############################
####################################################################################################

## CloudFlare ignores HTTP/2 from origin server but we enable in case of Lets Encrypt ##
## because SlickStack is HTTPS-only the canonical block is port 443 (SSL) only ##

server {
        listen          443 ssl http2;
        listen          [::]:443 ssl http2;
        server_name     server.pbarecap.ph;
        root            /var/www/html;

        ## redirect any requests that do not match production/staging/dev ##
        if ($http_host !~ "server.pbarecap.ph|staging.server.pbarecap.ph|dev.server.pbarecap.ph") {
        return 301      https://server.pbarecap.ph$request_uri;
        }

####################################################################################################
#### Server Block (Production): Indexing + Public URI + Try Files Settings #########################
####################################################################################################

    ## redirect index.php to root ##
    if ($request_uri ~* "^(.*/)index\.php$") {
        return 301 $1;
    }

    ## force trailing slash on */wp-admin requests ##
    rewrite /wp-admin$ https://$host$uri/ permanent;

    ## try files order ##
    location / {

                ## 503 error if maintenance file found in web root ##
                if (-f /var/www/html/maintenance.html) {
                        return 503;
                }

        ## first try files, then directories, otherwise query index
        try_files $uri $uri/ /index.php?$args;
        ## force trailing slashes on urls (do not enable for bbPress/BuddyPress sites)
        # rewrite ^([^.]*[^/])$ $1/ permanent;
    }

    ## hidden files (block access) ##
    location ~ /\. {
        ## do not enable if using Certbot, Git, etc ##
        # deny all;
    }

    ## Certbot domain verification ##
    location = /.well-known* {
        # default_type "text/plain";
        allow all;
    }

    ## fixes potential 403 denied issues with WP-JSON ##
    location ~ ^/wp-json/ {
        ## if permalinks not enabled or not loaded properly in the browser ##
        rewrite ^/wp-json/(.*?)$ /?rest_route=/$1 last;
    }

####################################################################################################
#### Server Block: FastCGI Cache Settings ##########################################################
####################################################################################################

## several common URI patterns are configured to skip FastCGI caching to avoid conflicts ##
## ensure your site follows correct URI spelling e.g. /cart and /checkout (etc) ##

    ## set to either 1/0 to skip fastcgi cache by default ##
    set $skip_cache 0;

    ## post requests should always skip the cache
    if ($request_method = POST) {
        set $skip_cache 1;
    }

    ## query strings should always skip the cache
    if ($query_string != "") {
        set $skip_cache 1;
    }

    ## sensitive wordpress urls should always skip the cache
    if ($request_uri ~* "index.php|/account.*|/cart.*|/checkout.*|/contact.*|/dashboard.*|/login.*|/my-.*|/order.*|/profile.*|/register.*|/settings.*|/view.*|/wc-api.*|/wp-admin.*|wp-.*.php") {
        set $skip_cache 1;
    }

    ## do not cache RSS feeds or sitemaps (special 5 minute cache rule or something would be better in the future) ##
    if ($request_uri ~* "/feed/|sitemap(_index)?.xml") {
        set $skip_cache 1;
    }

    ## certain cookies (logged in users or recent commenters etc) should always skip the cache
    if ($http_cookie ~* "wordpress_logged_in|wp-postpass|woocommerce_items_in_cart|woocommerce_cart_hash|comment_author") {
        set $skip_cache 1;
    }

    ## woocommerce cart actions should always skip the cache
    # if ($arg_add-to-cart != "") {
    #    set $skip_cache 1;
    # }

    ## woocommerce shoppers should always skip the cache
    # if ($http_cookie ~* "cookie_woocommerce_items_in_cart") {
    #    set $skip_cache 1;
    # }

    ## woocommerce shoppers should always skip the cache
    # if ($cookie_woocommerce_items_in_cart != "0") {
    #    set $skip_cache 1;
    # }

####################################################################################################
#### Server Block: PHP-FPM Routing + FastCGI Routing Settings ######################################
####################################################################################################

    location ~ \.php$ {
        set $rt_session "";
        if ($http_cookie ~* "wp_woocommerce_session_[^=]*=([^%]+)%7C") {
                set $rt_session wp_woocommerce_session_$1;
        }
        if ($skip_cache = 0 ) {
                more_clear_headers "Set-Cookie*";
                set $rt_session "";
        }

        ## include /etc/nginx/fastcgi_params for older nginx versions
        include /etc/nginx/fastcgi.conf;
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        ## fastcgi_pass unix:/var/run/php/php7.4-fpm.sock
        ## fastcgi_pass unix:/run/php/php7.4-fpm.sock;
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_read_timeout 300;
        fastcgi_index index.php;
        fastcgi_cache WORDPRESS;
        fastcgi_cache_valid 200 301 404 1440m;
        fastcgi_cache_bypass $skip_cache;
        fastcgi_no_cache $skip_cache;
        ## below line should not be needed
        # include snippets/fastcgi-php.conf;
    }

####################################################################################################
#### Server Block (Production): WP-Login Settings (Rate Limiting) ##################################
####################################################################################################

## because of goofy Nginx we must reinclude all PHP directives here as they exist above ##
## next we enable rate-limiting to prevent automated brute force hack attempts ##

        location = /wp-login.php {
                include /etc/nginx/fastcgi.conf;
                try_files $uri =404;
                fastcgi_split_path_info ^(.+\.php)(/.+)$;
                fastcgi_pass 127.0.0.1:9000;
                fastcgi_read_timeout 300;
                fastcgi_index index.php;
                fastcgi_cache WORDPRESS;
                fastcgi_cache_valid 200 301 404 1440m;
                fastcgi_cache_bypass $skip_cache;
                fastcgi_no_cache $skip_cache;

                ## rate limit zone
                limit_req zone=wplogin burst=1 nodelay;
        }

####################################################################################################
#### Server Block: Adminer (phpMyAdmin) Settings ###################################################
####################################################################################################

    location ^~ /adminer {
        ## limit access to one request per second per IP address
        limit_req zone=adminer burst=1 nodelay;
        alias /var/www/meta/adminer.php;
        ## PHP-FPM routing must be re-included here to ensure processing ##
        include /etc/nginx/fastcgi.conf;
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_read_timeout 300;
        fastcgi_index index.php;
        fastcgi_cache off;
    }

    location ^~ /phpmyadmin {
        ## limit access to one request per 30 second per IP address
        limit_req zone=phpmyadmin burst=1 nodelay;
        alias /var/www/meta/adminer.php;
        ## PHP-FPM routing must be re-included here to ensure processing ##
        include /etc/nginx/fastcgi.conf;
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_read_timeout 300;
        fastcgi_index index.php;
        fastcgi_cache off;
    }

####################################################################################################
#### Server Block: Staging URI Settings (Supports WP-Staging, Etc) #################################
####################################################################################################

## staging sites are noindexed, FastCGI caching is disabled, and paths are hardcoded ##
## media files (uploads) are aliased to existing files from the production site ##

    location /staging/ {
        ## first try files, then directories, otherwise query index ##
        try_files $uri $uri/ /staging/index.php?$args;
        ## tweak FastCGI Cache (needs to be improved with mild cache settings) ##
        include /etc/nginx/fastcgi.conf;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_read_timeout 300;
        fastcgi_index index.php;
        fastcgi_cache off;
        add_header X-Robots-Tag "noindex, nofollow, nosnippet, noarchive";
        add_header X-Powered-By "SlickStack";
        add_header Strict-Transport-Security "max-age=15552000" always; ## 180 days
        add_header X-FastCGI-Cache $upstream_cache_status;
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";
        add_header Permissions-Policy "accelerometer=(), ambient-light-sensor=(), autoplay=*, battery=(), camera=(), display-capture=*, document-domain=*, encrypted-media=*, fullscreen=*, geolocation=(self), gyroscope=(), layout-animations=*, legacy-image-formats=*, magnetometer=(), microphone=(self), midi=(), oversized-images=*, payment=*, picture-in-picture=*, publickey-credentials-get=*, sync-xhr=*, usb=(), vibrate=(), wake-lock=(), xr-spatial-tracking=()";
    }

    # location ~ ^/staging/wp-content/uploads/(.*) {
    #    return 302             https://server.pbarecap.ph/wp-content/uploads/$1;
    # }

    location ^~ /staging/wp-content/uploads/ {
        alias /var/www/html/wp-content/uploads/;
    }

    location /dev/ {
        ## first try files, then directories, otherwise query index ##
        try_files $uri $uri/ /dev/index.php?$args;
        ## tweak FastCGI Cache (needs to be improved with mild cache settings) ##
        include /etc/nginx/fastcgi.conf;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_read_timeout 300;
        fastcgi_index index.php;
        fastcgi_cache off;
        add_header X-Robots-Tag "noindex, nofollow, nosnippet, noarchive";
        add_header X-Powered-By "SlickStack";
        add_header Strict-Transport-Security "max-age=15552000" always; ## 180 days
        add_header X-FastCGI-Cache $upstream_cache_status;
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";
        add_header Permissions-Policy "accelerometer=(), ambient-light-sensor=(), autoplay=*, battery=(), camera=(), display-capture=*, document-domain=*, encrypted-media=*, fullscreen=*, geolocation=(self), gyroscope=(), layout-animations=*, legacy-image-formats=*, magnetometer=(), microphone=(self), midi=(), oversized-images=*, payment=*, picture-in-picture=*, publickey-credentials-get=*, sync-xhr=*, usb=(), vibrate=(), wake-lock=(), xr-spatial-tracking=()";
    }

    # location ~ ^/dev/wp-content/uploads/(.*) {
    #    return 302             https://server.pbarecap.ph/wp-content/uploads/$1;
    # }

   # location ^~ /dev/wp-content/uploads/ {
   #     alias /var/www/html/wp-content/uploads/;
   # }

####################################################################################################
#### Server Block (Production): Static Resource Settings ###########################################
####################################################################################################

## this snippet controls expiration headers and any other settings for static assets ##
## keep in mind that CloudFlare or CDNs will likely overwrite these settings ##

    location ~* .(atom|bmp|bz2|css|doc|docx|eot|gif|gz|ico|jpeg|jpg|js|mid|midi|mp4|ogg|ogv|otf|png|ppt|rar|rss|rtf|svg|svgz|tar|tgz|ttf|wav|webp|woff|xls|zip)$ {
        expires max;
    }

####################################################################################################
#### Server Block: Browser Resource (Render) Settings ##############################################
####################################################################################################

## avoid render security errors in certain browsers e.g. Firefox/IE ##

    location ~* .(eot|ttf|ttc|otf|woff|woff2|svg|css|js)$ {
        add_header Access-Control-Allow-Origin "*";
        expires max;
    }

####################################################################################################
#### Server Block: Favicon Settings ################################################################
####################################################################################################

## 204 error better than 404 error if not found ##

    location = /favicon.ico {
        try_files $uri =204;
    }

####################################################################################################
#### Server Block: Robots.txt Settings (Optimized For Virtual Robots.txt MU Plugin) ################
####################################################################################################

    location = /robots.txt {
        ## first try files, then directories, otherwise query index ##
        try_files $uri $uri/ /index.php?$args;
        allow all;
    }

####################################################################################################
#### Server Block: Ads.txt Settings (Optimized For Virtual Ads.txt MU Plugin) ######################
####################################################################################################

    location = /ads.txt {
        ## first try files, then directories, otherwise query index ##
        try_files $uri $uri/ /index.php?$args;
        allow all;
    }

####################################################################################################
#### Server Block: Git Configuration Settings ######################################################
####################################################################################################

    location = /.git/config {
        deny all;
    }

####################################################################################################
#### Server Block: Deny Access To Various (Unsafe + Unused) WordPress Core Files ###################
####################################################################################################

    ## WP directories ##
    location ~* /(?:wp-includes|wp-content|mu-plugins|uploads)/.*\.php$ {
        deny all;
    }

    ## WP meta files ##
    location ~* (license|licence|readme)\.(htm|html|txt) {
        deny all;
    }

    ## wp-admin concatenation ##
    location = /wp-admin/load-scripts.php {
        deny all;
    }

    ## wp-admin concatenation ##
    location = /wp-admin/load-styles.php {
        deny all;
    }

    ## wp-config ##
    location ~ /wp-config*.php {
        deny all;
    }

    ## XML-RPC ##
    location = /xmlrpc.php {
        deny all;
    }

    ## wp-mail ##
    location = /wp-mail.php {
        deny all;
    }

    ## wp-links-opml ##
    location = /wp-links-opml.php {
        deny all;
    }

    ## wp-trackback ##
    location = /wp-trackback.php {
        deny all;
    }

    ## WP debug logs ##
    location ~ /wp-content/debug\.log {
        deny all;
    }

####################################################################################################
#### Server Block: Deny Access To Sensitive SlickStack Core Files ##################################
####################################################################################################

## here we deny frontend access to certain sensitive files that are part of SlickStack ##
## this provides extra security and prevents snooping into your configuration ##

    ## object-cache.php ##
    location = /wp-content/object-cache.php {
        deny all;
    }

    ## blacklist.txt ##
    location = /wp-content/blacklist.txt {
        deny all;
    }

    ## functions.php ##
    location = /wp-content/functions.php {
        deny all;
    }

    ## xxx-common.php ##
    location = /wp-content/mu-plugins/xxx-common.php {
        deny all;
    }

    ## /wp-admin/install.php ... deny all after wp core installer improved to avoid browser-based installs

####################################################################################################
#### Server Block: Custom Settings For Popular Third-Party WordPress Plugins #######################
####################################################################################################

    ## Easy Digital Downloads ##
    location ~ ^/wp-content/uploads/edd/(.*?)\.zip$ {
        rewrite / permanent;
    }

    ## more coming soon... ##


####################################################################################################
#### Server Block (Production): Maintenance File (Named Location) ##################################
####################################################################################################

  ## activate named @maintenance location for any 503 errors ##
  error_page 503 @maintenance;

  ## location rules for maintenance.html ##
  location @maintenance {
       rewrite ^(.*)$ /maintenance.html break;
  }


####################################################################################################
#### Server Block (Production): #######################
####################################################################################################

## DO NOT REMOVE THIS CURLY BRACKET ᕦ⊙෴⊙ᕤ ##
}
