# This config file uses nginx fastcgi-cache
fastcgi_cache_path /var/www/cache/rocketstack levels=1:2 keys_zone=rocketstack:100m inactive=60m;

server {
	listen 80;
	listen [::]:80;
	server_name pbarecap.ph;

    root /var/www/rocketstack;

    index index.php index.htm index.html;

        # BEGIN W3TC Minify core
#    rewrite ^/wp-content/cache/minify/ /index.php last;
    # END W3TC Minify core
    #client_max_body_size 5M;

    include snippets/acme-challenge.conf;

    # Exclusions
    include snippets/exclusions.conf;

    # Security
    include snippets/security.conf;

    # Static Content
    include snippets/static-files.conf;

    # Fastcgi cache rules
    include snippets/fastcgi-cache.conf;

    include snippets/limits.conf;

    include snippets/nginx-cloudflare.conf;
    include snippets/yoast-sitemaps.xml;
    
    # BEGIN W3TC Minify core
    #rewrite ^/wp-content/cache/minify/ /index.php last;
    # END W3TC Minify core

    rewrite ^/sitemap.xml$ /index.php?aiosp_sitemap_path=root last;
    rewrite ^/sitemap_(.+)_(\d+).xml$ /index.php?aiosp_sitemap_path=$1&aiosp_sitemap_page=$2 last;
    rewrite ^/sitemap_(.+).xml$ /index.php?aiosp_sitemap_path=$1 last;

    location / {
    		try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
		try_files $uri =404;
		include snippets/fastcgi-params.conf;

		fastcgi_pass unix:/run/php/php8.0-fpm.sock;

		# Skip cache based on rules in snippets/fastcgi-cache.conf.
		fastcgi_cache_bypass $skip_cache;
		fastcgi_no_cache $skip_cache;

		# Define memory zone for caching. Should match key_zone in fastcgi_cache_path above.
  	        fastcgi_cache rocketstack;

		# Define caching time.
		fastcgi_cache_valid 60m;
		#increase timeouts
		fastcgi_read_timeout 6000;
		fastcgi_connect_timeout 6000;
		fastcgi_send_timeout 6000;
		proxy_read_timeout 6000;
		proxy_connect_timeout 6000;
		proxy_send_timeout 6000;
		send_timeout 6000;

		#these lines should be the ones to allow Cloudflare Flexible SSL to be used so the server does not need to decrypt SSL
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-NginX-Proxy true;

    }

}

server {
    listen              443 ssl;
    listen              [::]:443 ssl;
	server_name pbarecap.ph;

    root /var/www/rocketstack;

    index index.php index.htm index.html;
    
        # BEGIN W3TC Minify core
 #   rewrite ^/wp-content/cache/minify/ /index.php last;
    # END W3TC Minify core
    access_log /var/log/nginx/rocketstack_ssl_access.log;
    error_log /var/log/nginx/rocketstack_ssl_error.log;

    #client_max_body_size 5M;

    #once you have SSL certificates using LetsEncrypt you can alter the paths in the two lines below to reflect your domain and uncomment the lines by removing the leading # symbol
    ssl_certificate           /etc/nginx/ssl/pbarecap.ph/fullchain.pem;
    ssl_certificate_key        /etc/nginx/ssl/pbarecap.ph/key.pem;

    # Exclusions
    include snippets/exclusions.conf;

    # Security
    include snippets/security.conf;

    # Static Content
    include snippets/static-files.conf;

    # Fastcgi cache rules
  # include snippets/fastcgi-cache.conf;

    include snippets/limits.conf;
   include snippets/gzip.conf;

   include snippets/nginx-cloudflare.conf;

     include rocket-nginx/default.conf;
    # BEGIN W3TC Minify core
 #   rewrite ^/wp-content/cache/minify/ /index.php last;
    # END W3TC Minify core

    rewrite ^/sitemap.xml$ /index.php?aiosp_sitemap_path=root last;
    rewrite ^/sitemap_(.+)_(\d+).xml$ /index.php?aiosp_sitemap_path=$1&aiosp_sitemap_page=$2 last;
    rewrite ^/sitemap_(.+).xml$ /index.php?aiosp_sitemap_path=$1 last;
   
    

    location / {
    		try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
		try_files $uri =404;
		include snippets/fastcgi-params.conf;

		fastcgi_pass unix:/run/php/php8.0-fpm.sock;

		# Skip cache based on rules in snippets/fastcgi-cache.conf.
		fastcgi_cache_bypass $skip_cache;
		fastcgi_no_cache $skip_cache;

		# Define memory zone for caching. Should match key_zone in fastcgi_cache_path above.
         	fastcgi_cache off;

		# Define caching time.
                fastcgi_cache_valid 60m;
		#increase timeouts
		fastcgi_read_timeout 6000;
		fastcgi_connect_timeout 6000;
		fastcgi_send_timeout 6000;
		proxy_read_timeout 6000;
		proxy_connect_timeout 6000;
		proxy_send_timeout 6000;
		send_timeout 6000;

		#these lines should be the ones to allow Cloudflare Flexible SSL to be used so the server does not need to decrypt SSL if you wish
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-NginX-Proxy true;

    }

}

